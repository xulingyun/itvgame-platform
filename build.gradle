buildscript {
    repositories {
        maven {
            credentials {
                username 'deployment'
                password '123456'
            }
            url 'http://58.247.76.194:8000/nexus/content/groups/public/'
        }
    }
    dependencies {
        classpath 'com.github.plecong:hogan-groovy:3.0'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'

group = 'oyeah'
archivesBaseName = 'itvgame'
version = '1.0.0'
webAppDirName = 'WebContent'
sourceCompatibility = '1.6'
targetCompatibility = '1.6'

repositories {
    flatDir { dirs "lib" }
    mavenLocal()
    maven {
      credentials {
      username 'deployment'
      password '123456'
      }
      url 'http://58.247.76.194:8000/nexus/content/groups/public/'
    }
}

dependencies {
	providedCompile 'javax.servlet:jsp-api:2.0'
    	providedCompile 'javax.servlet:servlet-api:2.5'
	groovy 'org.codehaus.groovy:groovy-all:2.0.0'
	
	compile 'mysql:mysql-connector-java:5.1.20'
	compile 'c3p0:c3p0:0.9.1.2'
	compile 'net.sf.ehcache:ehcache-core:2.5.2'
	compile 'commons-beanutils:commons-beanutils:1.8.3'
	compile 'commons-codec:commons-codec:1.6'
	compile 'commons-collections:commons-collections:3.2.1'
	compile 'commons-digester:commons-digester:2.1'
	compile 'commons-discovery:commons-discovery:0.5'
	compile 'commons-io:commons-io:2.3'
	compile 'commons-lang:commons-lang:2.6'
	compile 'commons-logging:commons-logging:1.1.1'
	compile 'dom4j:dom4j:1.6.1'
	compile 'org.apache.httpcomponents:httpclient:4.2'
	compile 'org.apache.httpcomponents:httpclient-cache:4.2'
	compile 'org.apache.httpcomponents:httpmime:4.2'
	compile 'org.apache.httpcomponents:httpcore:4.2.1'
	compile 'javax.mail:mail:1.4.5'
	compile 'log4j:log4j:1.2.17'
	compile 'org.slf4j:slf4j-api:1.6.6'
	compile 'org.slf4j:slf4j-jdk14:1.6.6'
	compile 'net.sourceforge.jexcelapi:jxl:2.6.12'
	compile 'axis:axis:1.4'
	compile 'org.apache.axis:axis-ant:1.4'
        compile 'com.fasterxml.jackson.core:jackson-core:2.0.4'
    	compile 'com.fasterxml.jackson.core:jackson-databind:2.0.4'
    	compile 'com.fasterxml.jackson.core:jackson-annotations:2.0.4'
	
	compile ':axiom-api:1.2.9@jar'
	compile ':axiom-dom:1.2.9@jar'
	compile ':axiom-impl:1.2.9@jar'
	compile ':axis2-adb:1.5.2@jar'
	compile ':axis2-adb-codegen:1.5.2@jar'
	compile ':axis2-codegen:1.5.2@jar'
	compile ':axis2-corba:1.5.2@jar'
	compile ':axis2-jaxbri:1.5.2@jar'
	compile ':axis2-jaxws:1.5.2@jar'
	compile ':axis2-kernel:1.5.2@jar'
	compile ':axis2-metadata:1.5.2@jar'
	compile ':axis2-mtompolicy:1.5.2@jar'
	compile ':axis2-saaj:1.5.2@jar'
	compile ':axis2-soapmonitor-servlet:1.5.2@jar'
	compile ':axis2-transport-http:1.5.2@jar'
	compile ':axis2-transport-local:1.5.2@jar'
	compile ':XmlSchema:1.4.3@jar'
	compile ':neethi:2.0.4@jar'
	compile ':commons-httpclient:3.1@jar'
	compile ':jsoup:1.7.2@jar'
		
	compile ':jtds:1.2.5@jar'
	compile ':commons-dbutils-fixed:1.3@jar'
	compile ':telcomsh-ws-auth:0.1@jar'
	compile ':telcomsh-ws-points:0.1@jar'
	compile ':telcomsh-ws-userinfo:0.1@jar'
	compile ':the9-ws-acc:0.1@jar'
	compile ':hunan-ws:3.6@jar'
	compile ':ezmorph:1.0.4@jar'
	compile ':json-lib-2.3-jdk15:1.0@jar'
	
	runtime 'jstl:jstl:1.2'
	runtime 'javax.faces:jsf-api:1.2_15'
	runtime 'javax.faces:jsf-impl:1.2_15'
}

def renderTemplate(text, binding) {
    com.github.plecong.hogan.Hogan.compile(text).render(binding)
}

def renderTemplateFile(f, binding) {
    def file = f instanceof File ? f : file(f)
    renderTemplate(file.getText("utf-8"), binding)
}

def validprop(name) {
    project.hasProperty(name)?project.property(name):''
}

task createConf {
    dependsOn processResources
    ext.tplPath = "${processResources.destinationDir}/configurations.tpl"
    ext.xmlPath = "${processResources.destinationDir}/configurations.xml"
    inputs.property 'telcom', validprop('telcom')
    inputs.property 'sp', validprop('sp')
    inputs.file tplPath
    outputs.file xmlPath
}

createConf << {
    if (project.hasProperty('telcom')&&project.hasProperty('sp')) {
        def binding = ['telcom': telcom, 'sp': sp]
        def text = renderTemplateFile(tplPath, binding)
        file(xmlPath).write(text, "utf-8")
    }
}

classes {
    dependsOn createConf
}
